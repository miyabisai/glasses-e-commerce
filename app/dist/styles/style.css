@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700&family=Noto+Sans:wght@700&family=Roboto:ital,wght@0,400;0,700;1,900&display=swap");a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,footer .copy-right,footer .footer-links a,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{border:0;font-size:100%;font:inherit;margin:0;padding:0;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none}audio,canvas,video{*zoom:1;display:inline-block;*display:inline;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;font-size:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{-ms-interpolation-mode:bicubic;border:0}figure,form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;*margin-left:-7px;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;*height:13px;padding:0;*width:13px}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{background:#ccc;color:#000;margin:.2em 0;padding:.2em 0}*,:after,:before{box-sizing:border-box;list-style:none}body{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;font-size:16px}body a{text-decoration:none}footer,header,main{width:100%}.container{border:1px solid #000;margin:0 auto;max-width:810px}.flex{display:flex;flex-direction:row}.flex-col{display:flex;flex-direction:column}.flex-around{align-items:center;justify-content:space-around}.flex-between{align-items:center;justify-content:space-between}.flex-end{justify-content:flex-end}.flex-align{align-items:baseline}.verical-align{vertical-align:middle}.flex-center{align-items:center;display:flex;flex-direction:row;justify-content:center}.d-inline-b{display:inline-block}.vertical-center{align-items:center}.flex-space-between{display:flex;flex-direction:row;justify-content:space-between}.mb-1{margin-bottom:8px}.mb-2{margin-bottom:16px}.mb-3{margin-bottom:24px}.mb-4{margin-bottom:32px}.mb-5{margin-bottom:40px}.mb-6{margin-bottom:48px}.mb-7{margin-bottom:56px}.mb-8{margin-bottom:64px}.mb-9{margin-bottom:72px}.mb-10{margin-bottom:80px}.mb-12{margin-bottom:104px}.mb-13{margin-bottom:160px}@media screen and (min-width:768px){.mb-md-1{margin-bottom:8px}.mb-md-2{margin-bottom:16px}.mb-md-3{margin-bottom:24px}.mb-md-4{margin-bottom:32px}.mb-md-5{margin-bottom:40px}.mb-md-6{margin-bottom:48px}}@media screen and (max-width:767px){.mb-s-1{margin-bottom:8px}.mb-s-2{margin-bottom:16px}.mb-s-3{margin-bottom:24px}.mb-s-4{margin-bottom:32px}.mb-s-5{margin-bottom:40px}}h1{font-size:64px;line-height:96px}h1,h2{color:#aa0601;font-family:Noto Sans TC,sans-serif;font-weight:700}h2{font-size:48px;line-height:80px}h3{font-size:32px;font-weight:400;line-height:48px}h3,h4{color:#aa0601;font-family:Noto Sans TC,sans-serif}h4{font-size:24px;font-weight:700;line-height:36px}h5{color:#000;font-family:Noto Sans,sans-serif;font-size:20px;font-weight:700;line-height:24px}footer .copy-right,footer .footer-links a,p{color:#000;font-family:Noto Sans TC,sans-serif;font-size:16px;font-weight:400;line-height:24px}.date-text{color:#707070;font-size:14px;font-weight:400;line-height:21px}.date-text,.link-text{font-family:Noto Sans TC,sans-serif}.link-text{color:#fff;font-size:20px;font-weight:200;line-height:30px}@media screen and (min-width:768px){h1{font-size:48px;line-height:72px}h2{font-size:32px;line-height:48px}h3{font-size:24px;line-height:36px}h4{font-size:20px;line-height:23px}h5{font-size:16px;line-height:24px}}@media screen and (max-width:767px){h1{font-size:32px;line-height:72px}h2{font-size:24px}h2,h3{line-height:36px}h3{font-size:16px}h4{font-size:20px}h4,h5{line-height:24px}h5{font-size:16px}}header{background-color:#aa0601}header nav{padding:30px 80px}header .nav-links a{cursor:pointer;display:block;margin:0 32px;text-decoration:none}footer{background-color:#aa0601;padding:44px 0}footer .sns-links li a{display:inline-block}footer .sns-links .facebook-icon,footer .sns-links .instagrams-icon{fill:#fff;height:48px;width:48px}footer .footer-links a{color:#fff;display:inline-block;margin-right:48px}footer .sns-links a{margin-left:32px}footer .email .copy-right,footer .email .footer-links a,footer .email p,footer .footer-links .email a,footer .footer-links .telphone a,footer .telphone .copy-right,footer .telphone .footer-links a,footer .telphone p{color:#fff;font-family:Roboto,sans-serif;font-size:36px;font-weight:400;line-height:54px;margin-left:16px}footer .copy-right a,footer .copy-right li{color:#fff}footer .policy-links a{display:block;padding:0 24px}main .jumbotron{background:url(../images/jumbotron/laurenz-kleinheider-OsC8HauR0e0-unsplash.jpg);background-position:50%;background-size:cover;height:840px;width:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
